[{"content":"einleitung das rsa-kryptosystem ist ein asymmetrisches verschlüsselungsverfahren es wurde 1978 von rivest shamir und adleman unter dem titel „a methode for obtaining digital signatures public key cryprosystems communications of acm nr 21 seite 120-126 vorgestellt die sicherheit des rsa-kryptosystems beruht auf der bekannten schwierigkeit der zerlegung großer ganzzahlen primfaktoren bisher sind hierzu keine effizienten algorithmen bekannt alle publizierten algorithmen haben eine exponentielle laufzeit die „pollard-p-1-methode ist mit einer komplexität von $\\mathcal{o}\\sqrt3{n}$ das derzeit schnellste verfahren zur primfaktorzerlegung 1.1 asymmetische verschlüsselung das ziel der asymmetrischen verschlüsselung ist der sichere informationsaustausch zwischen teilnehmern einem öffentlichen netzwerk bei dem die zu transportierenden verschlüsselten daten abgehört werden können als grundlage der asymmetrische verschlüsselung werden zwei zueinander passende aber verschiedene schlüssel verwendet mit dem öffentlichen schlüssel werden daten verschlüsselt die entschlüsselung ist ausschließlich mit dem privaten schlüssel möglich außerdem kann eine signierung und verifikation von daten durchgeführt werden 1.2 praxisbeispiel alice möchte eine nachricht verschlüsselt bob senden dazu benötigt sie den öffentlichen schlüssel von bob diesen hat sie aus einer vertrauenswürdigen quelle persönlich aus dem „web-of-trust oder auch von seiner webseite erhalten und sie kann sicher sein dass dieser korrekt ist ein schlüssel kann authentifizierungsmerkmale aufweisen z. b bild des besitzers alice schickt die mit dem öffentlich schlüssel verschlüsselte daten bob dort angekommen kann dieser die verschlüsselten daten wieder entschlüsseln die verschlüsselte nachricht kann von niemanden außer bob mit seinem privaten schlüssel entschlüsselt werden um den diebstahl eines privaten schlüssels zu erschweren ist dieser zudem mit einem passwort geschützt alice kann daten für bob auch signieren d. h digital unterschreiben dazu wird ein prüfwert der nachricht mit dem privaten schlüssel von alice erstellt bob kann dann mit dem öffentlichen schlüssel von alice nachprüfen ob die daten tatsächlich von alice stammen oder ob diese modifiziert wurden grundlagen zur durchführung von ver- und entschlüsselung mit dem rsa-kryptosystem sind einige wenige mathematische grundlagen notwendig die diesem abschnitt kurz vorgestellt werden sollen 2.1 modulo-operation teilt man eine zahl $m$ durch eine andere zahl $n$ so bleibt neben dem ganzzahligen ergebnis $q$ ein rest $r$ die ganzzahlige division wird zur unterscheidung von der normalen division als $div$ geschrieben und die operation zur bestimmung des restes wird modulo-operation $mod$ genannt $$ \\begin{align*} \u0026amp m\\ \\textrm{div}\\ n\\newline \u0026amp m\\ \\textrm{mod}\\ n\\newline \u0026amp q\\cdot n+r\\newline \u0026amp m\\ \\textrm{div}\\ n\\cdot n+m\\ \\textrm{mod}\\ \\end{align*} $$ beispiel $$ \\begin{align*} \u0026amp 17\\ \\textrm{div}\\ 3\\newline \u0026amp 17\\ \\textrm{mod}\\ 3\\newline 17 \u0026amp 5\\cdot3+2\\newline \u0026amp 17\\ \\textrm{div}\\ 3\\cdot3+17\\ \\textrm{mod}\\ \\end{align*} $$ 2.2 modulo-inverse die kongruenz ist eine beziehung zwischen zwei ganzzahlen man nennt zwei zahlen $a$ $b$ kongruent symbol $\\equiv$ bezüglich einer weiteren zahl wenn sie bei division durch den modulo denselben rest haben $$ \\begin{align*} \u0026amp \\equiv b\\ \\textrm{mod}\\ m\\newline a\\ mod\\ \u0026amp b\\ \\textrm{mod}\\ \\end{align*} $$ die modulo-multiplikativ-inverse einer ganzzahl $a$ ist eine ganzzahl $x$ für die folgende bedingung erfüllt ist $$ \\begin{align*} a^{-1} \u0026amp \\equiv x\\ \\textrm{mod}\\ m\\newline ax\\equiv aa^{-1} \u0026amp \\equiv 1\\ \\textrm{mod}\\ \\end{align*} $$ der euklidische algorithmus ist ein verfahren um den größten gemeinsamen teiler zweier positiver ganzzahlen zu berechnen sind $a$ und $m$ zwei teilerfremde positive ganze zahlen so kann die erweiterte version des algorithmus verwendet werden um die inverse von $a\\ \\textrm{mod}\\ m$ also die positive zahl $xm$ die die gleichung $ax\\ \\textrm{mod}\\ m=1$ erfüllt zu berechnen beispiel der erweiterte euklidische algorithmus sei dem folgenden beispiel erläutert bei dem die inverse von modulo 48 berechnet werden soll zunächst wird der euklidische algorithmus angewandt mit dem der größte gemeinsame teiler hier $\\textrm{ggt}\\color{red}5\\color{none}\\color{cyan}48\\color{none}=\\color{magenta}1$ ermittelt werden kann $$ \\begin{align*} \\color{cyan}48\\color{none} \u0026amp 9\\cdot\\color{red}5\\color{none}+\\color{green}3\\newline \\color{red}5\\color{none} \u0026amp 1\\cdot\\color{green}3\\color{none}+\\color{blue}2\\newline \\color{green}3\\color{none} \u0026amp 1\\cdot\\color{blue}2\\color{none}+\\color{magenta}1 \\end{align*} $$ einem weiteren schritt wird nach den ermittelten resten $\\color{magenta}1\\color{none} \\color{blue}2\\color{none} \\color{green}3\\color{none}$ umgestellt und diese nacheinander mit der untersten zeile beginnend eingesetzt $$ \\begin{align*} \\color{magenta}1\\color{none} \u0026amp \\color{green}3\\color{none}-1\\cdot\\color{blue}2\\color{none}\\newline \\color{magenta}1\\color{none} \u0026amp \\color{green}3\\color{none}-1\\cdot\\color{red}5\\color{none}-1\\cdot\\color{green}3\\color{none}=2\\cdot\\color{green}3\\color{none}-1\\cdot\\color{red}5\\color{none}\\newline \\color{magenta}1\\color{none} \u0026amp 2\\cdot\\color{cyan}48\\color{none}-9\\cdot\\color{red}5\\color{none}-1\\cdot\\color{red}5\\color{none}=2\\cdot\\color{cyan}48\\color{none}-19\\cdot\\color{red}5 \\end{align*} $$ damit wurde gezeigt dass $\\color{magenta}1\\color{none}=2\\cdot\\color{cyan}48\\color{none}-19\\cdot\\color{red}5$ und somit gilt $$ -19\\cdot\\color{red}5\\color{none}\\ \\textrm{mod}\\ \\color{cyan}48\\color{none}=\\color{magenta}1 $$ da die inverse positiv und kleiner als 48 sein soll wird auf der linken seite der gleichung noch $\\color{cyan}48\\color{none}\\cdot\\color{red}5\\color{none}$ addiert das ergebnis lautet somit $$ \\begin{align*} -19\\cdot\\color{red}5\\color{none}+\\color{cyan}48\\color{none}\\cdot\\color{red}5\\color{none}\\ \\textrm{mod}\\ \\color{cyan}48\\color{none} \u0026amp \\color{magenta}1\\newline 29\\cdot\\color{red}5\\color{none}\\ \\textrm{mod}\\ \\color{cyan}48\\color{none} \u0026amp \\color{magenta}1\\newline \\color{red}5\\color{none}^{-1}\\ \\textrm{mod}\\ \\color{cyan}48\\color{none} \u0026amp 29 \\end{align*} $$ 2.3 primzahlen primzahlen sind natürliche zahlen die größer als eins und ausschließlich durch sich selbst und eins teilbar sind es gibt keine formel mit der primzahlen berechnet werden können zur ermittlung einer primzahl wird eine zufällige zahl der gewünschten größenordnung gewählt und mit einem primzahltest miller-rabin-test agarwal-saxena-kayal-test überprüft ob es sich um eine primzahl handelt der primzahlsatz $\\pin$ für eine beliebige reelle zahl $n$ ist eine approximation mittels logarithmus für die anzahl von primzahlen $p$ für die gilt $p\\leq n$ $$ \\pin=\\frac{n}{\\lnn} $$ für den primzahlsatz existieren auch stärkere formen die bessere approximationen liefern legendres formel integrallogarithmus außerdem zeigt der primzahlsatz dass nicht viele primzahltests durchgeführt werden müssen um eine primzahl zu finden beispiel wie viele primzahlen mit 512 bit gibt es $$ \\pi2^{512}-\\pi2^{511}=\\frac{2^{512}}{\\ln2^{512}}-\\frac{2^{511}}{\\ln2^{511}}\\thickapprox2^{502} $$ wie wahrscheinlich ist es dass eine zufällig ausgewählte zahl eine primzahl ist $$ \\frac{2^{502}}{2^{512}-2^{511}}=2^{-9}=\\frac{1}{512} $$ wenn man vorher die geraden zahlen ausschließt so verbessert sich die wahrscheinlichkeit auf $2^{-8}=\\frac{1}{256}$ im mittel kann also nach rund 250 versuchen eine primzahl mit einer größe von 512 bit gefunden werden 2.4 eulersche φ-funktion die eulersche φ-funktion gibt für jede natürliche zahl $m$ wie viele zu $m$ teilerfremde positive ganze zahlen es gibt die nicht größer als $m$ sind mit anderen worten wie viele zahlen von eins bis $m$ gibt es bei denen der größte gemeinsame teiler ggt gleich eins ist $$ \\varphim=|\\lbrace a\\in\\mathbb{n}\\ |\\ 1\\leq a\\leq m\\ \\wedge\\ \\textrm{ggt}am=1 \\rbrace| $$ da im zusammenhang mit dem rsa-kryptosystem primzahlen verwendet werden und diese nur durch eins und sich selbst teilbar sind so sind die zahlen $1$ bis $p-1$ teilerfremd die bestimmung der eulersche φ-funktion bei primzahlen ist daher trivial $$ \\begin{equation*} \\varphip p-1 \\end{equation*} $$ der vollständigkeit halber sei noch die allgemeine berechnungsformel angegeben aus der sich für jede zahl $m$ die φ-funktion aus ihrer kanonischen primfaktorzerlegung berechnen lässt $$ \\varphim=m\\underset{p|n}{\\prod}\\left1-\\frac{1}{p}\\right $$ 2.5 satz von fermat-euler die eulersche φ-funktion findet im satz von fermat-euler eine ihre wichtigsten anwendungen der satz sagt aus dass für zwei ganze positive und teilerfremde zahlen $m$ und $n$ $m$ ein teiler von $n^{\\varphim}-1$ ist $$ \\textrm{ggt}mn=1\\rightarrow m^{\\varphin}\\equiv1\\ \\textrm{mod}\\ $$ der spezialfall des kleinen-fermat-satzes tritt ein wenn $n$ durch $m$ nicht ganzzahlig geteilt werden kann dies trifft immer zu wenn $n$ eine primzahl und $m1$ ist $$ n\\nmid m\\rightarrow m^{n-1}\\equiv1\\ \\textrm{mod}\\ $$ funktionsweise 3.1 generierung des privaten und öffentlichen schlüssels 3.1.1 wähle zwei verschiedene primzahlen und wie bereits gezeigt wurde können ausreichend primzahlen nicht allzuvielen wiederholungen generiert werden siehe abschnitt primzahlen bei der wahl der primzahlen sollte folgendes beachtet werden da andernfalls bekannte faktorisierungsalgorithmen pollard-p-1-methode fermat-faktorisierung quadratisches sieb zahlkörpersieb zu effizient arbeiten könnten die großen primzahlen $p$ und $q$ sollen sich nicht zu stark unterscheiden zahlkörpersieb die primzahlen sollten jedoch auch nicht zu nah beieinander liegen fermat-faktorisierung und $p+1$ und $p-1$ sollten möglichst wenig kleine primteiler haben pollard-rho-algorithmus für besonders starke verschlüsselung empfehlen sich primzahlen bei denen $\\frac{p-1}{2}$ und $\\frac{q-1}{2}$ auch primzahlen sind sog starke primzahlen 3.1.2 berechne das produkt aus $p$ und $q$ ist teil des öffentlichen schlüssels $$ n=p\\cdot $$ 3.1.3 berechne eulersche φ-funktion die berechnung der eulersche φ-funktion ist trivial vgl abschnitt eulersche φ-funktion $$ \\varphip\\cdot q=p-1q-1 $$ 3.1.4 bestimmung einer zahl wähle eine natürliche zahl $e$ zwischen und $\\varphipq$ bei der der größte gemeinsame teiler ggt mit $\\varphipq$ eins ist $$ 1e\\varphi\\ e\\in\\mathbb{n} $$ $$ \\textrm{ggt}e\\varphi=1 $$ 3.1.5 bestimmung einer zahl wähle eine natürliche zahl $d$ zwischen und $\\varphipq$ bei der das produkt aus $d\\cdot e$ kongruent zu $1\\ \\textrm{mod}\\ \\varphipq$ vgl abschnitt modulo-inverse $$ 1d\\varphi\\ d\\in\\mathbb{n} $$ $$ d\\cdot e\\equiv1\\ \\textrm{mod}\\ \\varphi $$ 3.1.6 öffentlicher schlüssel der öffentliche schlüssel setzt sich aus den beiden zahlen $e$ und $n$ zusammen 3.1.7 privater schlüssel der private schlüssel setzt sich aus der zahl $d$ und einem teil des öffentlichen schlüssels zahl $n$ zusammen 3.2 ver- und entschlüsselung 3.2.1 verschlüsselung eine nachricht $m$ muss als natürliche zahl kodiert werden wobei $0mn$ gilt die verschlüsselung erfolgt mit dem öffentlichen schlüssel $e n$ $$ c=m^{e}\\ \\textrm{mod}\\ $$ 3.2.2 entschlüsselung die entschlüsselung der verschlüsselten nachricht $c$ erfolgt mit dem privaten schlüssel $d n$ und kann nur vom empfänger bzw vom ersteller des schlüsselpaares durchgeführt werden $$ \\begin{align*} c^{d} \u0026amp \\equiv m\\ \\textrm{mod}\\ n\\newline \u0026amp c^{d}\\ \\textrm{mod}\\ \\end{align*} $$ 3.3 signierung und verifizierung bei der generierung und überprüfung einer rsa-verifizierung geht man analog zur ver- und entschlüsselung vor eine signierung entspricht dabei der entschlüsselung und wird mit dem privaten schlüssel durchgeführt die verifizierung kann von jedem mit dem öffentlichem schlüssel durchgeführt werden entspricht also der verschlüsselung tatsächlich wird der signatur der gesamte text verschlüsselt abgelegt folglich entstehen sehr große signaturen durch zuvor festgelegt konventionen kann die signatur verkleinert werden diese festlegungen müssen natürlich zum zeitpunkt der verifizierung bekannt sein 3.4 zufallszahlen mit dem rsa-kryptosystem kann auch ein pseudozufallszahlengenerator implementiert werden dazu wählt man zwei primzahlen $p$ und so dass das produkt $n=p\\cdot q$ schwer zu faktorisieren ist zudem muss ein startwert $x_{0}$ gewählt werden der teilerfremd zu $n$ ist folgewerte berechnet man wie folgt $$ x_{x+1}=x_{i}^{e}\\ \\textrm{mod}\\ $$ die ausgabe des generators ist jeweils das letzte bit von $x_{i}$ insofern $n$ nicht faktorisiert werden kann so ist die vorhersage des jeweils nächsten bits nicht möglich andernfalls wäre die ratewahrscheinlichkeit besser als $\\frac{1}{2}$ dies ist mathematisch beweisbar nicht der fall der nachteil dieser methode ist ihre ineffizienz 3.5 beispiel 3.5.1 erzeugung des schlüsselpaars primzahlen $p=61$ und $q=53$ bereche $n=p\\cdot q=61\\cdot53=\\underline{3233}$ berechne $\\varphip\\cdot q=p-1q-1=61-153-1=3120$ bestimme die bestimmung von $e$ erfolgt zufällig im bereich von bis $\\varphip\\cdot q$ die überprüfung ob $\\textrm{ggt}e3120=1$ erfüllt ist kann mit dem euklidischen algorithmus siehe abschnitt modulo inverse erfolgen $$ \\begin{align*} \\textrm{ggt}173120 \u0026amp \\overset{}{=} 1\\newline 3120 \u0026amp 183\\cdot17+9\\newline 17 \u0026amp 1\\cdot9+8\\newline \u0026amp 1\\cdot8+\\underline{1}\\newline \\textrm{ggt}173120 \u0026amp \\end{align*} $$ berechne $$ \\begin{align*} e\\cdot \u0026amp \\equiv \u0026amp 1\\ \\textrm{mod}\\ \\text{φ}p\\cdot q\\newline 17\\cdot \u0026amp \\equiv \u0026amp 1\\ \\textrm{mod}\\ 3120 \\end{align*} $$ die berechnung der modular-inversen $d$ kann mit dem erweiterten euklidischen algorithmus siehe ebenso abschnitt modulo-inverse erfolgen $$ \\begin{align*} \u0026amp 9-1\\cdot8\\newline \u0026amp 9-1\\cdot7-1\\cdot9=2\\cdot9-1\\cdot7\\newline \u0026amp 2\\cdot3120-183\\cdot17-1\\cdot7=2\\cdot3120-367\\cdot17 \\end{align*} $$ es gilt somit $$ \\begin{align*} -367\\cdot17+3120\\cdot17\\ \\textrm{mod}\\ 3120 \u0026amp 1\\newline 2753\\cdot17\\ \\textrm{mod}\\ 3120 \u0026amp 1\\newline \u0026amp \\underline{2753} \\end{align*} $$ privater schlüssel $dn=27533233$ öffentlicher schlüssel $en=173233$ 3.5.2 verschlüsselung von 1234 mit öffentlichem schlüssel $$ c=m^{e}\\ \\textrm{mod}\\ n=1234{}^{17}\\ \\textrm{mod}\\ 3233=\\underline{2183} $$ 3.5.3 entschlüsselung von 2183 mit privatem schlüssel $$ m=c^{d}\\ \\textrm{mod}\\ n=2183^{2753}\\ \\textrm{mod}\\ 3233=\\underline{1234} $$ 3.5.4 signierung von 1234 mit privatem schlüssel $$ s=m^{d}\\ \\textrm{mod}\\ n=1234^{2753}\\ \\textrm{mod}\\ 3233=\\underline{1512} $$ 3.5.5 verifizierung von 1234 mit signatur 1512 und öffentlichem schlüssel die nachricht $m=1234$ soll mit der signatur $s=1512$ und dem öffentlichem schlüssel verifiziert werden $$ \\begin{align*} \u0026amp \\overset{}{=} s^{e}\\ \\textrm{mod}\\ n\\newline 1234 \u0026amp \\overset{}{=} 1512^{17}\\ \\textrm{mod}\\ 3233\\newline 1234 \u0026amp 1234 \\end{align*} $$ 3.5.6 pseudozufallszahlengenerator der startwert wird wie folgt festgelegt $x_{0}=d=2753$ $$ \\begin{align*} x_{x+1} \u0026amp x_{i}^{e}\\ \\textrm{mod}\\ n\\newline x_1 \u0026amp 2753^{17}\\ \\textrm{mod}\\ 3233=1492=10111010100_2\\newline 10111010100_2\\wedge1_2 \u0026amp \\underline{0}\\newline x_2 \u0026amp 1492^{17}\\ \\textrm{mod}\\ 3233=2783=101011011111_2\\newline 101011011111_2\\wedge1_2 \u0026amp \\underline{1}\\newline x_3 \u0026amp 2783^{17}\\ \\textrm{mod}\\ 3233=2721=101010100001_2\\newline 101010100001_2\\wedge1_2 \u0026amp \\underline{1}\\newline x_4 \u0026amp \\ldots \\end{align*} $$","date":null,"description":"Dieser Blogpost beschäftigt sich mit dem Kryptosystem RSA. Nach einer kurzen Einführung wird ein Praxisbeispiel angeführt, um die Bedeutung asymmetrischer Verschlüsselungsverfahren zu verdeutlichen.","permalink":"/posts/asymmetrische-kryptographie-am-beispiel-des-rsa-kryptosystems/","tags":["kryptographie","verschlüsselung","mathematik"],"title":"Asymmetrische Kryptographie am Beispiel des RSA-Kryptosystems"},{"content":"wie zieht man am besten imap- postfächer von einem auf den anderen server um ich habe viel ausprobiert und bin beim kostenlosen imapsync gelandet alle anderen kostenlosen tools haben bei meinen migrationen leider nicht gut funktoniert z.b fehlende e-mails encoding-probleme nach der installation die zugegebenermaßen etwas tricky ist ist aber die benutzung des kommandozeilentools denkbar einfach imapsync findet auch besonderheiten der mail-server-konfigurationen und reagiert entsprechend natürlich werden posteingang -ausgang gesendet und alle weiteren ordner ordentlich synchronisiert oder noch viel einfacher und ohne installation mit docker","date":null,"description":"Wie zieht man am besten seine (IMAP-) Postfächer von einem auf einen anderen Server um?","permalink":"/posts/migration-von-e-mail-postfaechern/","tags":["admin","e-mail","linux"],"title":"Migration von E-Mail-Postfächer"},{"content":"tourenvorschlag „watzmann-erstbesteigung und einmal rund um den königssee im jahr 2015 konnte ich mit freunden die folgende wandertour machen der zweite tag erfordert sehr gute kondition schwindelfreiheit und etwas kletter-know-how wir hatten sehr viel spaß und wir waren nach den paar tagen sehr geschafft eine wirklich herrliche tour auch die hütten sind sehr gut das riemannhaus mit abzügen aber das gleicht die wasseralm wieder aus das berchtesgadener land ist immer eine reise wert tag tagesziel anreise watzmannhaus 1.930m dauer anreise std beschreibung anreise nach ramsaumittagessenaufstieg zum watzmannhaus über wimbachklamm mitterkaseralm tag tagesziel gipfel des watzmanns 2.712m wimbachgrieshütte dauer 9-10 std beschreibung aufstieg über hocheck 2.651m mittelspitze 2.713m auf südspitzeabstieg zur wimbachgrieshütte 1.327mabstieg zur wimbachgrieshütte übernachtung tag tagesziel kärlingerhaus 1.635m dauer 4-5 std beschreibung aufstieg zum kärlinger haus über hundtstodgatterlbad im fundensee tag tagesziel ingolstädter haus 2.120m großer hundstod 2.594m dauer std std beschreibung aufstieg zum ingolstädter hausaufstieg auf den großen hundstod tag tagesziel riemannhaus 2.177m dauer std std beschreibung überstieg zum riemannhausruhetag oder verschiedene gipfeltourensommerstein 2.308m 05 std.breithorn 2.504m 15 std.schönfeldspitze 2.653m 30 std tag tagesziel wasseralm der röth 1.423m dauer std std beschreibung abstieg zur wasseralm über hochbrunnsulzen 2358m 401 stieg zum steinhütterl dann 424 bis wasseralm tag tagesziel carl-von-stahl-haus 1.734m dauer 7-8 std 7-8 std beschreibung aufstieg zum carl-von-stahl-haus über priesbergalm kahlersberg 2.350m mit enzianbrennerei tag tagesziel hoher göll 2.522m purtschellerhaus 1.692m dauer 6-7 std beschreibung aufstieg auf den hohen göllabstieg zum purtschellerhaus tag tagesziel abreise dauer 05 std std std beschreibung purtschellerhaus auf roßfeldstraßetaxifahrt nach ramsaurückfahrt","date":null,"description":"Tourenvorschlag: „Watzmann-Erstbesteigung“ und einmal Rund um den Königssee","permalink":"/posts/watzmann-tour/","tags":["sport","klettern","wandern"],"title":"Watzmann-Tour"}]